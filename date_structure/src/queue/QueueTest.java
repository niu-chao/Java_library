package queue;

import java.util.AbstractQueue;
import java.util.LinkedList;
import java.util.Queue;

public class QueueTest {
    /**
     * 　队列（queue）是一种特殊的线性表，特殊之处在于它只允许在表的前端（front）进行删除操作，而在表的后端（rear）进行插入操作，
     *      和栈一样，队列是一种操作受限制的线性表。进行插入操作的端称为队尾，进行删除操作的端称为队头。队列中没有元素时，称为空队列。
     *
     * 　　队列的数据元素又称为队列元素。在队列中插入一个队列元素称为入队，从队列中删除一个队列元素称为出队。因为队列只允许在一端插入，
     *      在另一端删除，所以只有最早进入队列的元素才能最先从队列中删除，故队列又称为先进先出（FIFO—first in first out）线性表。
     *
     * 　　比如我们去电影院排队买票，第一个进入排队序列的都是第一个买到票离开队列的人，而最后进入排队序列排队的都是最后买到票的。
     *
     * 　　在比如在计算机操作系统中，有各种队列在安静的工作着，比如打印机在打印列队中等待打印。
     *
     * 　　队列分为：
     *
     * 　　①、单向队列（Queue）：只能在一端插入数据，另一端删除数据。
     *
     * 　　②、双向队列（Deque）：每一端都可以进行插入数据和删除数据操作。
     *
     * 　　这里我们还会介绍一种队列——优先级队列，优先级队列是比栈和队列更专用的数据结构，
     *  在优先级队列中，数据项按照关键字进行排序，关键字最小（或者最大）的数据项往往在队列的最前面，而数据项在插入的时候都会插入到合适的位置以确保队列的有序。
     */

    public static void main(String[] args) {
        /**
         * 队列的基本操作
         *
         * LinkedList 实现阻塞队列
         */
        Queue queue = new LinkedList();

        //插入一个元素  如果队列已满，则抛出一个IIIegaISlabEepeplian异常
        queue.add(1);
        queue.add(2);
        queue.add(3);
        queue.add(4);
        queue.add(5);
        queue.add(6);

        //添加一个元素并返回true       如果队列已满，则返回false
        queue.offer(7);
        queue.offer(8);
        queue.offer(9);



        //获取队列头部的元素  v
        System.out.println( queue.element());

        // 返回队列头部的元素    如果队列为空，则返回null
        System.out.println(queue.peek());

        //队列的长度
        System.out.println(queue.size());

        // 移除并返问队列头部的元素    如果队列为空，则返回null
        System.out.println(queue.poll());


        System.out.println(queue.remove());


        /**
         *  ①、栈、队列（单向队列）、优先级队列通常是用来简化某些程序操作的数据结构，而不是主要作为存储数据的。
         *
         * 　　②、在这些数据结构中，只有一个数据项可以被访问。
         *
         * 　　③、栈允许在栈顶压入（插入）数据，在栈顶弹出（移除）数据，但是只能访问最后一个插入的数据项，也就是栈顶元素。
         *
         * 　　④、队列（单向队列）只能在队尾插入数据，对头删除数据，并且只能访问对头的数据。
         *      而且队列还可以实现循环队列，它基于数组，数组下标可以从数组末端绕回到数组的开始位置。
         *
         * 　　⑤、优先级队列是有序的插入数据，并且只能访问当前元素中优先级别最大（或最小）的元素。
         *
         * 　　⑥、这些数据结构都能由数组实现，但是可以用别的机制（后面讲的链表、堆等数据结构）实现。
         */

    }
}
